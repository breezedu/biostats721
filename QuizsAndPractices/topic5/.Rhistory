pch = 19,col='red')
# Change type/color of point character based on another variable
# - Plot by transect where data was collected
# - Nice because this variable (numeric) already exists in data set
plot(x = data$BARESOIL, y = data$R,
xlab = "Exposed soil",
ylab = "Species richness", main = "Scatter plot",
xlim = c(0, 45), ylim = c(4, 20),
pch = data$Transect)
pch.time <- rep(1,dim(data)[1])
pch.time[data$Time > 1974] <- 16
plot(x = data$BARESOIL, y = data$R,
xlab = "Exposed soil",
ylab = "Species richness", main = "Scatter plot",
xlim = c(0, 45), ylim = c(4, 20),
pch = pch.time)
pch.time
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
legend('mean')
)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
legend(2000,9.5,'mean')
)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
legend(10,9.5,'mean')
)
head(women)
## round(x, digits = 0)
min.w = round(min(women), digits = 2)
max.w = round(max(women), digits = 2)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
legend(10,9.5,'mean')
)
legend(10,9.5,'mean')
legend(1,1.5,'mean')
legend(111,111.5,'mean')
legend(11,15,'mean')
legend(11,25,'mean')
legend(21,25,'mean')
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
legend(21,25,'mean')
)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
legend(21,25,'mean')
legend(01,25,'mean')
legend(11,25,'mean')
legend(11,15,'mean')
legend(11,115,'mean')
legend(21,115,'mean')
legend(15,115,'mean')
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
legend(15,115,'mean')
mean.w = mean(women)
mean.w = round(mean(women), digits = 2)
legend(15,115, paste('mean = ', mean.w) )
legend(15,125, paste('mean = ', mean.w) )
legend(12,125, paste('mean = ', mean.w) )
## round(x, digits = 0)
min.w = round(min(women), digits = 2)
max.w = round(max(women), digits = 2)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
legend(13,125, paste('mean = ', mean.w) )
legend(-3.5,2,legend=c("mean:", mean.w),lty=1:4)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
legend(-3.5,2,legend=c("mean:", mean.w),lty=1:4)
legend(13.5,125,legend=c("mean:", mean.w),lty=1:4)
legend(13.5,125,legend=paste("mean:", mean.w),lty=1:4)
legend(13.5,125,legend=paste("mean:", mean.w),lty=1:2)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
legend(13.5,125,legend=paste("mean:", mean.w),lty=1:2)
text(0.9,50,labels='* denotes the sample mean')
text(13,115,labels='* denotes the sample mean')
text(13,115,labels= paste('mean = ', mean.w) )
min.w = round(min(women), digits = 2)
max.w = round(max(women), digits = 2)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
text(13,115,labels= paste('mean = ', mean.w) )
text(13,115,labels= c(paste('mean = ', mean.w) ))
min.w = round(min(women), digits = 2)
max.w = round(max(women), digits = 2)
hist(women,
breaks = 20,
freq = T,
col=colors()[639],
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
text(13,115,labels= c(paste('mean = ', mean.w) ))
text(13,115,labels= '(paste('mean = ', mean.w)' ))
text(13,115,labels= (paste('mean = ', mean.w) ))
hist(women,
breaks = 20,
freq = T,
col=pink,
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
col='pink',
hist(women,
breaks = 20,
freq = T,
col='pink',
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
hist(women,
breaks = 20,
freq = T,
col='blue',
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
text(13,115,labels= (paste('mean = ', mean.w) ))
text(13,115,labels= (('mean = ') ))
text(23,115,labels= (paste('mean = ', mean.w) ))
hist(women,
breaks = 20,
freq = T,
col='blue',
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
text(18,115,labels= (paste('mean = ', mean.w) ))
hist(women,
breaks = 20,
freq = T,
col='purple',
main = 'for women',
xlab = paste('BMI value range = ', min.w, 'to', max.w),
)
mean.w = round(mean(women), digits = 2)
text(18,115,labels= (paste('mean = ', mean.w) ))
nsites<-10          # number of polymorphic qualifying sites in gene
np1<-3000           # sample size popn1
np2<-3000           # sample size popn2
n<-np1+np2
p.upper<-0.01       # upper bound on qualifying variants
b.v<-.95            # baseline viability (probability of being viable give zero or one affected gene copies)
bta<-1/10           # relative risk of viability given 2 affected copies versus baseline
nsim<-100
s<-c(rep(0,nsim))
g<-array(0,dim=c(n,nsites,2))
x<-c(rep(0,n))
v<-c(rep(0,n))
n1<-c(rep(0,n))
n2<-c(rep(0,n))
pi2.g<-c(rep(0,n))
p<-runif(nsites,min=2/(2*n),max=p.upper)
prob<-matrix(0,3,nsites) # site specific genotype probabilities
for(i in 1:nsites){
prob[1,i]<-(1-p[i])^2
prob[2,i]<-2*p[i]*(1-p[i])
prob[3,i]<-p[i]^2
}
baseB<-function(x,digits,B){
baseB<-c(rep(0,digits))
temp<-x
count<-1
while(temp>0){
baseB[count]<-temp%%B
temp<-temp%/%B
count<-count+1
}
return(baseB)
}
bigN<-function(digits){
bigN<-0
for(i in 1:digits){
bigN<-bigN+2*3^(i-1)
}
return(bigN)
}
mu<-0
for(i in 1:bigN(nsites)){
g.temp<-baseB(i,nsites,3)
n1.temp<-sum(g.temp==1)
n2.temp<-sum(g.temp==2)
if(n1.temp<=1 & n2.temp==0){pi2.g.temp<-0}
if(n1.temp>1 & n2.temp==0){pi2.g.temp<-1-(1/2)^(n1.temp-1)}
if(n2.temp>0){pi2.g.temp<-1}
rho<-1
for(j in 1:nsites){
rho<-rho*prob[g.temp[j]+1,j]
}
mu<-mu+rho*pi2.g.temp
}
nnz<-0
for(j in 1:nsim){
print(j)
#simulate data under alternative
count<-1
while(count<=n){
for(c in 1:2){
for(l in 1:nsites){
g[count,l,c]<-rbinom(1,1,p[l])
}
}
temp1<-sum(g[count,,1])
temp2<-sum(g[count,,2])
x[count]<-(temp1>0)+(temp2>0)
if(x[count]<2){p.v<-b.v}
else{p.v<-b.v*bta}
v[count]<-rbinom(1,1,p.v)
if(v[count]==1){count<-count+1}
}
g.obs<-g[,,1]+g[,,2]
for(i in 1:n){
n1[i]<-sum(g.obs[i,]==1)
n2[i]<-sum(g.obs[i,]==2)
if(n1[i]<=1 & n2[i]==0){pi2.g[i]<-0}
if(n1[i]>1 & n2[i]==0){pi2.g[i]<-1-(1/2)^(n1[i]-1)}
if(n2[i]>0){pi2.g[i]<-1}
}
s.j<-pi2.g-mu
if(var(s.j)!=0){
s[j]<-sum(s.j)/sqrt(n*var(s.j))
nnz<-nnz+1
}
}
sum(s<qnorm(.05))/nsim
head(women)
## round(x, digits = 0)
min.w = round(min(women), digits = 2)
max.w = round(max(women), digits = 2)
x.lab <- paste('BMI value range = ', min.w, 'to', max.w)
hist(women,
breaks = 20,
freq = T,
col='purple',
main = 'for women',
xlab = x.lab,
)
mean.w = round(mean(women), digits = 2)
text(18,115,labels= (paste('mean = ', mean.w) ))
boxplot(data$exam1,
main='Exam 1 Scores',
ylab='Score out of 100 points',
col="turquoise4")   # Color Name
data <- read.table("marks2.dat",header=TRUE)
boxplot(data$exam1,
main='Exam 1 Scores',
ylab='Score out of 100 points',
col="turquoise4")   # Color Name
boxplot(data$exam1,
main='Exam 1 Scores',
ylab='Score out of 100 points',
col="#00868B")   # Color Hexadecimal
# Part (c)
boxplot(data$exam1,
main='Exam 1 Scores',
xlab='Score out of 100 points',
col=colors()[639],
horizontal=TRUE)
# Part (f)
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0,
col=colors()[637:639])
boxplot(data$exam1,
main='Exam 1 Scores',
xlab='Score out of 100 points',
col=colors()[639],
horizontal=TRUE)
exam <- c(data$exam1,data$exam2,data$exam3)
group <- c(rep(1,length(data$exam1)),
rep(2,length(data$exam2)),
rep(3,length(data$exam3)))
boxplot(exam~group)
head(exam)
exam
boxplot(data$exam1,data$exam2,data$exam3)
# Part (b)
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'))
# Part (c)
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0)
exam.means <- apply(data[,2:4],2,mean,na.rm=TRUE)
exam.means
lines(1:3,exam.means,type='p',
pch='*',cex=5,col='darkorange2')
# Part (f)
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0,
col=colors()[637:639])
exam.means <- apply(data[,2:4],2,mean,na.rm=TRUE)
lines(1:3,exam.means,type='p',
pch='*',cex=5,col='darkorange2')
text(0.9,50,labels='* denotes the sample mean')
text(1.9,50,labels='* denotes the sample mean')
# Part (f)
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0,
col=colors()[637:639])
exam.means <- apply(data[,2:4],2,mean,na.rm=TRUE)
lines(1:3,exam.means,type='p',
pch='*',cex=5,col='darkorange2')
text(1.9,50,labels='* denotes the sample mean')
png('AllExamsBoxplot.png')
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0,
col=colors()[637:639])
exam.means <- apply(data[,2:4],2,mean,na.rm=TRUE)
lines(1:3,exam.means,type='p',
pch='*',cex=5,col='darkorange2')
text(0.9,50,labels='* denotes the sample mean')
dev.off()
png('AllExamsBoxplot.png')
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0,
col=colors()[637:639])
exam.means <- apply(data[,2:4],2,mean,na.rm=TRUE)
lines(1:3,exam.means,type='p',
pch='*',cex=5,col='darkorange2')
text(1.5,50,labels='* denotes the sample mean')
dev.off()
pdf('AllExamsBoxplot.pdf')
boxplot(exam~group,
main='Exam Scores',
ylab='Score out of 100 points',
names=c('Exam 1','Exam 2','Exam 3'),
range=0,
col=colors()[637:639])
exam.means <- apply(data[,2:4],2,mean,na.rm=TRUE)
lines(1:3,exam.means,type='p',
pch='*',cex=5,col='darkorange2')
text(1.5,50,labels='* denotes the sample mean')
dev.off()
norm.plot.data <- function(mu,sigma) {
x <- seq(-3.5,3.5,by=0.01)*sigma + mu
y <- dnorm(x,mean=mu,sd=sigma)
return(list(x=x,y=y))
norm.01 <- norm.plot.data(mu=0,sigma=1)
norm.02 <- norm.plot.data(mu=0,sigma=2)
norm.21 <- norm.plot.data(mu=2,sigma=1)
norm.22 <- norm.plot.data(mu=2,sigma=2)
png(file='pdfsin1.png')
plot(norm.01$x,norm.01$y,
type="l",col='sienna2',lwd=2,
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Different Normal Distributions',
ylab='Density',
xlab='Random Variable Values')
lines(norm.02$x,norm.02$y,col='sienna3',lwd=2)
lines(norm.21$x,norm.21$y,col='slategray2',lwd=2)
lines(norm.22$x,norm.22$y,col='slategray4',lwd=2)
legend(x=-7,y=0.4,cex=0.8,lty=rep(1,4),
legend=c('mu=0 / sigma=1','mu=0 / sigma=2','mu=2 / sigma=1','mu=2 / sigma=2'),
col=c('sienna2','sienna3','slategray2','slategray4'))
dev.off()
)
# Question 3:
norm.plot.data <- function(mu,sigma) {
x <- seq(-3.5,3.5,by=0.01)*sigma + mu
y <- dnorm(x,mean=mu,sd=sigma)
return(list(x=x,y=y))           }
# Part (a)
norm.01 <- norm.plot.data(mu=0,sigma=1)
norm.02 <- norm.plot.data(mu=0,sigma=2)
norm.21 <- norm.plot.data(mu=2,sigma=1)
norm.22 <- norm.plot.data(mu=2,sigma=2)
# Part (b)
# - Set working directory to where you want the figure
#   to be exported (could be different than where the
#   data file was stored)
# setwd("") <-- ***
png(file='pdfsin1.png')
plot(norm.01$x,norm.01$y,
type="l",col='sienna2',lwd=2,
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Different Normal Distributions',
ylab='Density',
xlab='Random Variable Values')
lines(norm.02$x,norm.02$y,col='sienna3',lwd=2)
lines(norm.21$x,norm.21$y,col='slategray2',lwd=2)
lines(norm.22$x,norm.22$y,col='slategray4',lwd=2)
legend(x=-7,y=0.4,cex=0.8,lty=rep(1,4),
legend=c('mu=0 / sigma=1','mu=0 / sigma=2','mu=2 / sigma=1','mu=2 / sigma=2'),
col=c('sienna2','sienna3','slategray2','slategray4'))
dev.off()
plot(norm.01$x,norm.01$y,
type="l",col='sienna2',lwd=2,
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Different Normal Distributions',
ylab='Density',
xlab='Random Variable Values')
lines(norm.02$x,norm.02$y,col='sienna3',lwd=2)
lines(norm.21$x,norm.21$y,col='slategray2',lwd=2)
lines(norm.22$x,norm.22$y,col='slategray4',lwd=2)
legend(x=-7,y=0.4,cex=0.8,lty=rep(1,4),
legend=c('mu=0 / sigma=1','mu=0 / sigma=2','mu=2 / sigma=1','mu=2 / sigma=2'),
col=c('sienna2','sienna3','slategray2','slategray4'))
dev.off()
par(mfrow=c(2,2))
plot(norm.01$x,norm.01$y,
type="l",col='sienna2',
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Normal Dist with Mu=0 and Sigma=1',
ylab='Density',
xlab='Random Variable Values')
plot(norm.21$x,norm.21$y,col='sienna3',
type="l",
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Normal Dist with Mu=2 and Sigma=1',
ylab='Density',
xlab='Random Variable Values')
plot(norm.02$x,norm.02$y,col='slategray2',
type="l",
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Normal Dist with Mu=0 and Sigma=2',
ylab='Density',
xlab='Random Variable Values')
plot(norm.22$x,norm.22$y,col='slategray4',
type="l",
ylim=range(norm.01$y,norm.02$y,norm.21$y,norm.22$y),
xlim=range(norm.01$x,norm.02$x,norm.21$x,norm.22$x),
main='Normal Dist with Mu=2 and Sigma=2',
ylab='Density',
xlab='Random Variable Values')
dev.off()
